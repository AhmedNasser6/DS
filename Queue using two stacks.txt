#include <iostream>
#include <stack>
using namespace std;
class Queue {
    stack<int> s1;
    stack<int> s2;

public:
    void enqueue(int data) {
        s1.push(data);
    }

    int dequeue() {

        if (s2.empty()) {
            while (!s1.empty()) {
                s2.push(s1.top());
                s1.pop();
            }
        }

        if (!s2.empty()) {
            int front = s2.top();
            s2.pop();
            return front;
        } else {
            cout << "Queue is empty." <<endl;
            return -1; // or throw an exception
        }
    }

    bool isEmpty() {
        return (s1.empty() && s2.empty());
    }
};

int main() {
    Queue q;

    q.enqueue(1);
    q.enqueue(2);
    q.enqueue(3);


    cout << q.dequeue() << " "; // Output: 1
    cout << q.dequeue() << " "; // Output: 2

    q.enqueue(4);

    cout << q.dequeue() << " "; // Output: 3
    cout << q.dequeue() << " "; // Output: 4

    cout << endl;
    cout << "Is empty? " << (q.isEmpty() ? "Yes" : "No") <<endl; // Output: Is empty? Yes

    return 0;
}
