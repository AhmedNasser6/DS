using namespace std;
const int MAX_SIZE=100;
template<class t>
class Stack{
struct node{
t item;
node *next;
};
node *top,*cur;
public:
Stack():top(NULL){}
void push(t newitem)
{
    node *newitemptr=new node;
    if(newitemptr==NULL)
        cout<<"stack push cannot allocate memory";
    else
    newitemptr->item=newitem;
    newitemptr->next=top;
    top=newitemptr;
}
bool isempty(){
return top==NULL;
}
void pop(){
if(isempty()){
    cout<<"Stack is empty";
}
else{
node*temp=top;
top=top->next;
temp=temp->next=NULL;
delete temp;
}
}
void gettop(t&stacktop){
if(isempty())
    cout<<"Stack is empty";
else
    stacktop=top->item;

}
void print(){
    cur=top;
    cout<<"[";
while(cur!=NULL){
    cout<<cur->item<<" ";
   cur=cur->next;
}
cout<<"]\n"<<endl;
}
};
int main(){
Stack<int>s;
s.push(100);
s.push(200);
s.push(300);
s.pop();
s.print();
int x=0;
s.gettop(x);
cout<<x<<endl;
}
