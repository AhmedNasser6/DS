/*وَمَا رَمَيْتَ إِذْ رَمَيْتَ وَلَكِنَّ اللَّهَ رَمَى وَلِيُبْلِيَ الْمُؤْمِنِينَ مِنْهُ بَلَاءً حَسَنًا إِنَّ اللَّهَ سَمِيعٌ عَلِيمٌ*/

#include <bits/stdc++.h>
#include <stack>
/*                     A.Nasser                      */
using namespace std;
bool arePair(char open,char close){
if(open=='('&&close==')')
    return true;
    else if(open=='{'&&close=='}')
        return true;
     else if(open=='['&&close==']')
        return true;
     else
        return false;
}
bool arebalanced(string exp)
{
    stack<char>s;
    for(int i=0;i<exp.size();i++)
    {
        if(exp[i]=='('||exp[i]=='{'||exp[i]=='[')
            s.push(exp[i]);
        else if(exp[i]==')'||exp[i]=='}'||exp[i]==']')
        {
            if(s.empty()||!arePair(s.top(),exp[i]))
                return false;
                else
            s.pop();

        }

    }
    if(s.empty()==true)
        return true;
else
return false;
}
int main(){
string expression;
cout<<"Enter an expression:";
cin>>expression;
if(arebalanced(expression))
cout<<"Balanced\n";
else
    cout<<"NotBalanced\n";

}

